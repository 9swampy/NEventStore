//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EventStore {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("EventStore.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The object has already been disposed..
        /// </summary>
        internal static string AlreadyDisposed {
            get {
                return ResourceManager.GetString("AlreadyDisposed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The commit must be uniquely identified..
        /// </summary>
        internal static string CommitsMustBeUniquelyIdentified {
            get {
                return ResourceManager.GetString("CommitsMustBeUniquelyIdentified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Getting undispatched commits from persistence engine..
        /// </summary>
        internal static string GettingUndispatchedCommits {
            get {
                return ResourceManager.GetString("GettingUndispatchedCommits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Initializing persistence engine..
        /// </summary>
        internal static string InitializingPersistence {
            get {
                return ResourceManager.GetString("InitializingPersistence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Marking commit &apos;{0}&apos; as dispatched..
        /// </summary>
        internal static string MarkingCommitAsDispatched {
            get {
                return ResourceManager.GetString("MarkingCommitAsDispatched", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The stream revision must be a positive number..
        /// </summary>
        internal static string NonPositiveRevisionNumber {
            get {
                return ResourceManager.GetString("NonPositiveRevisionNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The commit sequence must be a positive number..
        /// </summary>
        internal static string NonPositiveSequenceNumber {
            get {
                return ResourceManager.GetString("NonPositiveSequenceNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pushing commit &apos;{0}&apos; to message publisher..
        /// </summary>
        internal static string PublishingCommit {
            get {
                return ResourceManager.GetString("PublishingCommit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The collection is read only and cannot be modified..
        /// </summary>
        internal static string ReadOnlyCollection {
            get {
                return ResourceManager.GetString("ReadOnlyCollection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The stream revision must always be greater than or equal to the commit sequence..
        /// </summary>
        internal static string RevisionTooSmall {
            get {
                return ResourceManager.GetString("RevisionTooSmall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scheduling commit &apos;{0}&apos; for delivery..
        /// </summary>
        internal static string SchedulingDelivery {
            get {
                return ResourceManager.GetString("SchedulingDelivery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting dispatcher.
        /// </summary>
        internal static string StartingDispatcher {
            get {
                return ResourceManager.GetString("StartingDispatcher", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stopping dispatcher.
        /// </summary>
        internal static string StoppingDispatcher {
            get {
                return ResourceManager.GetString("StoppingDispatcher", resourceCulture);
            }
        }
    }
}
